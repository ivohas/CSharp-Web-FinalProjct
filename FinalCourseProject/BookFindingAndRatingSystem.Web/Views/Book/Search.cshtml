@model AllBookQueryModel
@{
    ViewBag.Title = "Search";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="BookSorting"></label>
                <select asp-for="BookSorting" class="form-control">
                    <option value="1">Most Copies Sold</option>
                    <option value="2">Lowest price</option>
                    <option value="3">Highest Price</option>
                    <option value="4">Title (Ascending)</option>
                    <option value="5">Title (Descending)</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="BooksPerPage"></label>
                <select asp-for="BooksPerPage" class="form-control">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>
                </select>
            </div>

        </div>

        @*Put How many books you want in page*@
        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.BooksCount /
    Model.BooksPerPage);
}
<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
           asp-controller="Book"
           asp-action="Search"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.BookSorting)"><<</a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Books.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Book"
           asp-action="Search"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.BookSorting)">>></a>
    </div>
</div>
@if (!Model.Books.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}
<div class="row">
    @foreach (var books in Model.Books)
    {
        <partial name="_BooksPartial" model="@books" />
    }
</div>
